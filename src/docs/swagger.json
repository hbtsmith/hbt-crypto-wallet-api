{
  "openapi": "3.0.0",
  "info": {
    "title": "Crypto Wallet API",
    "version": "1.0.0",
    "description": "API Doc for Crypto Portfolio Learning APP"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth features"
    },
    {
      "name": "Categories",
      "description": "Categories operations"
    },
    {
      "name": "Tokens",
      "description": "Tokens operations"
    },
    {
      "name": "TokenBalance",
      "description": "Token balance operations"
    },
    {
      "name": "Import",
      "description": "Import via spreadsheet upload"
    }
  ],
  "paths": {
    "/token-balance/balance/{tokenId}/amount": {
      "get": {
        "summary": "Get total token amount",
        "tags": ["TokenBalance"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "tokenId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid" },
            "description": "Token ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Total token amount",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "totalAmount": { "type": "number" } }
                }
              }
            }
          },
          "404": { "description": "Token Not Found" }
        }
      }
    },
    "/token-balance/balance/{tokenId}/value": {
      "get": {
        "summary": "Get total token value",
        "tags": ["TokenBalance"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "tokenId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid" },
            "description": "Token ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Total token value",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "totalValue": { "type": "number" } }
                }
              }
            }
          },
          "404": { "description": "Token Not Found" }
        }
      }
    },
    "/auth/register": {
      "post": {
        "summary": "Create new User",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "User already exists"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "User login",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful, returns JWT token"
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/auth/refresh-token": {
      "post": {
        "tags": ["Auth"],
        "summary": "Generate a new access token based on the refresh token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR..."
                  }
                },
                "required": ["refreshToken"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tokens generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI..."
                    },
                    "refreshToken": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI..."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token invalid or expired"
          }
        }
      }
    },
    "/tokens": {
      "post": {
        "summary": "Create a new token",
        "tags": ["Tokens"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Token created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "400": {
            "description": "Validation error in the submitted data"
          }
        }
      },
      "get": {
        "summary": "List all tokens",
        "tags": ["Tokens"],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter by part of the token name"
          },
          {
            "name": "symbol",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter by part of the token symbol"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "name"
            },
            "description": "Sorting field"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "default": "asc"
            },
            "description": "Sorting order: ascending or descending"
          }
        ],
        "responses": {
          "200": {
            "description": "List of tokens",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Token"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tokens/{id}": {
      "get": {
        "summary": "Get token by ID",
        "tags": ["Tokens"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "404": {
            "description": "Token not found"
          }
        }
      },
      "put": {
        "summary": "Update token",
        "tags": ["Tokens"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "404": {
            "description": "Token not found"
          }
        }
      },
      "delete": {
        "summary": "Delete token",
        "tags": ["Tokens"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Token deleted successfully"
          },
          "404": {
            "description": "Token not found"
          }
        }
      }
    },
    "/categories": {
      "get": {
        "summary": "List Categories",
        "tags": ["Categories"],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter by part of the category name"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter by part of the category description"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "name"
            },
            "description": "Sorting field"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "default": "asc"
            },
            "description": "Sorting order: ascending or descending"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create new category",
        "tags": ["Categories"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          }
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "summary": "Get category by ID",
        "tags": ["Categories"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": "Category not found"
          }
        }
      },
      "put": {
        "summary": "Update category",
        "tags": ["Categories"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Category updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": "Category not found"
          }
        }
      }
    },
    "/token-balance": {
      "get": {
        "summary": "List token balances for the authenticated user",
        "tags": ["TokenBalance"],
        "parameters": [
          {
            "name": "tokenId",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "format": "uuid" },
            "description": "Filter by token ID"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 1 },
            "description": "Page number for pagination"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 10 },
            "description": "Limit of items per page"
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "default": "operationAt" },
            "description": "Sort by field"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "default": "desc"
            },
            "description": "Sort order"
          }
        ],
        "responses": {
          "200": {
            "description": "List of token balance records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/TokenBalance" }
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "post": {
        "summary": "Register token movement for authenticated user",
        "tags": ["TokenBalance"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TokenBalanceInput" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Token balance record created successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TokenBalance" }
              }
            }
          },
          "400": {
            "description": "Validation error"
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/token-balance/{id}": {
      "get": {
        "tags": ["TokenBalance"],
        "summary": "Get TokenBalance by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "responses": {
          "200": {
            "description": "TokenBalance found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TokenBalance" }
              }
            }
          },
          "404": {
            "description": "TokenBalance not found"
          }
        }
      },
      "put": {
        "tags": ["TokenBalance"],
        "summary": "Update a TokenBalance by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TokenBalanceInput" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TokenBalance" }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["TokenBalance"],
        "summary": "Delete a TokenBalance by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted successfully"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/import/categories": {
      "post": {
        "tags": ["Import"],
        "summary": "Import data via Excel spreadsheet",
        "description": "Uploads an Excel spreadsheet to import Categories.",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "Excel File (.xlsx) to be uploaded"
                  }
                },
                "required": ["file"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File received and processed successfully."
          },
          "400": {
            "description": "Error processing file."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/import/tokens": {
      "post": {
        "tags": ["Import"],
        "summary": "Import data via Excel spreadsheet",
        "description": "Uploads an Excel spreadsheet to import Tokens.",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "Excel File (.xlsx) to be uploaded"
                  }
                },
                "required": ["file"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File received and processed successfully."
          },
          "400": {
            "description": "Error processing file."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/import/token-balances": {
      "post": {
        "tags": ["Import"],
        "summary": "Import data via Excel spreadsheet",
        "description": "Uploads an Excel spreadsheet to import Balances.",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "Excel File (.xlsx) to be uploaded"
                  }
                },
                "required": ["file"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File received and processed successfully."
          },
          "400": {
            "description": "Error processing file."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "UserRegister": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": { "type": "string" },
          "email": { "type": "string", "format": "email" },
          "password": { "type": "string", "format": "password" }
        }
      },
      "UserLogin": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": { "type": "string", "format": "email" },
          "password": { "type": "string", "format": "password" }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "CategoryInput": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Token": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },

          "categoryId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "TokenInput": {
        "type": "object",
        "required": ["name", "symbol", "categoryId"],
        "properties": {
          "name": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },

          "categoryId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "TokenBalance": {
        "type": "object",
        "properties": {
          "tokenId": { "type": "string", "format": "uuid" },
          "userId": { "type": "string", "format": "uuid" },
          "amount": { "type": "number", "format": "decimal" },
          "price": { "type": "number", "format": "decimal" },
          "operationType": { "type": "string", "enum": ["BUY", "SELL"] },
          "operationAt": { "type": "string", "format": "date-time" },
          "notes": { "type": "string", "nullable": true }
        }
      },
      "TokenBalanceInput": {
        "type": "object",
        "required": [
          "tokenId",
          "amount",
          "price",
          "operationType",
          "operationAt"
        ],
        "properties": {
          "tokenId": { "type": "string", "format": "uuid" },
          "amount": { "type": "number", "format": "decimal" },
          "price": { "type": "number", "format": "decimal" },
          "operationType": { "type": "string", "enum": ["BUY", "SELL"] },
          "operationAt": { "type": "string", "format": "date-time" },
          "notes": { "type": "string", "nullable": true }
        }
      }
    }
  }
}
